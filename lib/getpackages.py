#!/usr/bin/env python
# -*- coding: utf-8 -*-
import os, sys
from zipfile import ZipFile
import re, requests
from config import RELEASE, RELEASEPATH

def extractPackage(packagename, path=None):
    print "Extrating %s..." %(packagename)
    if os.path.exists('/'.join([os.getcwd(), packagename])):
        path = '/'.join([os.getcwd(), path]) if path else os.getcwd()
        with ZipFile(packagename, 'r') as zipped:
            zipped.extractall(path)
    else:
        print "Error: Download %s failed, script's going to exit!" %(packagename)
        sys.exit()

def getURL(key):
    r = requests.get(RELEASE)
    url = re.search("%s(%s){1}%s" %(RELEASEPATH, key, "(.)*.zip"), r.text)
    if not url:
        print "Error: The Android version of your device is not an official release of Google!"
        sys.exit()
    return url.group()

def downloadCTSPackage(AndroidVersion="4.0.3"):
    print "Downloading the CTS source package..."
    r = requests.get(getURL(AndroidVersion), stream=True)
    CTSPackage = 'cts_%s.zip' %(AndroidVersion)
    with open(CTSPackage, 'wb') as source:
        while True:
            try:
                source.write(r.iter_content(chunk_size=10000000).next())
            except StopIteration:
                break
    extractPackage(CTSPackage)

def downloadMediaFiles(Key="media", MediaPackage="cts_media.zip", path="cts_media"):
    print "Downloading the Media resource package..."
    r = requests.get(getURL(Key), stream=True)
    with open(MediaPackage, 'wb') as source:
        while True:
            try:
                source.write(r.iter_content(chunk_size=10000000).next())
            except StopIteration:
                break
    extractPackage(MediaPackage, path)

def getPackages(AndroidVersion):
	downloadCTSPackage(AndroidVersion)
	downloadMediaFiles()
